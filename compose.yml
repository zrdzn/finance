services:
  backend:
    depends_on:
      - database
      - storage
    image: test-backend
    ports:
      - "8100:8095"
    expose:
      - "8095"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      CLIENT_URL: ${CLIENT_URL}
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_AUTH: ${MAIL_AUTH}
      MAIL_STARTTLS: ${MAIL_STARTTLS}
      STORAGE_ACCESS_KEY: ${STORAGE_ACCESS_KEY}
      STORAGE_SECRET_KEY: ${STORAGE_SECRET_KEY}
      STORAGE_REGION: ${STORAGE_REGION}
      STORAGE_ENDPOINT: ${STORAGE_ENDPOINT}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OAUTH_CLIENT_ID_GOOGLE: ${OAUTH_CLIENT_ID_GOOGLE}
      OAUTH_CLIENT_SECRET_GOOGLE: ${OAUTH_CLIENT_SECRET_GOOGLE}
    env_file:
      - .docker.env
  frontend:
    depends_on:
      - backend
    image: test-frontend
    ports:
      - "3010:3010"
    expose:
      - "3010"
    env_file:
      - .docker.env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
  database:
    image: postgres
    restart: always
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    expose:
      - '5432'
  storage:
    image: minio/minio
    restart: always
    volumes:
      - storage:/data
    environment:
      - MINIO_ROOT_USER=${STORAGE_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${STORAGE_SECRET_KEY}
      - MINIO_SITE_REGION=${STORAGE_REGION}
      - MINIO_SERVER_URL=${STORAGE_ENDPOINT}
    ports:
      - '9000:9000'
      - '9001:9001'
      - '9002:9002'
    entrypoint: ['minio', 'server', '/data', '--console-address', ':9002']

volumes:
  database:
    driver: local
  storage:
    driver: local